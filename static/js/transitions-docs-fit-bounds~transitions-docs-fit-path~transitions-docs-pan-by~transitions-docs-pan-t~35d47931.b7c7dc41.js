(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{"./src/controls/CustomControl.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return l});var o=t("./node_modules/react/index.js"),r=t("./node_modules/react-dom/index.js"),a=t("./src/context/GoogleMapsContext.ts"),i=t("./src/internal/useMemoOnce.ts");function l(e){var n=e.children,t=e.position,l=Object(a.d)(),s=Object(a.f)(),d=Object(i.a)(function(){return document.createElement("div")}),u=s.ControlPosition[t];return Object(o.useEffect)(function(){var e=l.controls[u];return e.push(d),function(){var n=e.getArray().indexOf(d);-1!==n&&e.removeAt(n)}},[u]),Object(r.createPortal)(n,d)}try{l.displayName="CustomControl",l.__docgenInfo={description:"",displayName:"CustomControl",props:{children:{defaultValue:null,description:"Content of control.",name:"children",required:!0,type:{name:"any"}},position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map.",name:"position",required:!0,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/controls/CustomControl.ts#CustomControl"]={docgenInfo:l.__docgenInfo,name:"CustomControl",path:"src/controls/CustomControl.ts#CustomControl"})}catch(s){}},"./src/controls/FullscreenControl.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return r});var o=t("./src/controls/internal/useMapControl.ts");function r(e){var n=e.position,t=void 0===n?"RIGHT_TOP":n;return Object(o.a)(function(e){return{name:"fullscreenControl",options:{position:e.ControlPosition[t]}}}),null}try{r.displayName="FullscreenControl",r.__docgenInfo={description:"",displayName:"FullscreenControl",props:{position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map.",name:"position",required:!1,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/controls/FullscreenControl.ts#FullscreenControl"]={docgenInfo:r.__docgenInfo,name:"FullscreenControl",path:"src/controls/FullscreenControl.ts#FullscreenControl"})}catch(a){}},"./src/controls/MapTypeControl.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return r});var o=t("./src/controls/internal/useMapControl.ts");function r(e){var n=e.position,t=void 0===n?"TOP_RIGHT":n,r=e.style,a=void 0===r?"DEFAULT":r,i=e.mapTypeIds,l=void 0===i?["HYBRID","ROADMAP","SATELLITE","TERRAIN"]:i;return Object(o.a)(function(e){return{name:"mapTypeControl",options:{style:e.MapTypeControlStyle[a],position:e.ControlPosition[t],mapTypeIds:l.map(function(n){return n&&e.MapTypeId[n]})}}}),null}try{r.displayName="MapTypeControl",r.__docgenInfo={description:"",displayName:"MapTypeControl",props:{position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map.",name:"position",required:!1,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}},style:{defaultValue:null,description:"Style id. Used to select what style of map type control to display.",name:"style",required:!1,type:{name:'"DEFAULT" | "DROPDOWN_MENU" | "HORIZONTAL_BAR"'}},mapTypeIds:{defaultValue:null,description:"IDs of map types to show in the control.",name:"mapTypeIds",required:!1,type:{name:'("HYBRID" | "ROADMAP" | "SATELLITE" | "TERRAIN")[]'}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/controls/MapTypeControl.ts#MapTypeControl"]={docgenInfo:r.__docgenInfo,name:"MapTypeControl",path:"src/controls/MapTypeControl.ts#MapTypeControl"})}catch(a){}},"./src/controls/RotateControl.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return r});var o=t("./src/controls/internal/useMapControl.ts");function r(e){var n=e.position,t=void 0===n?"TOP_LEFT":n;return Object(o.a)(function(e){return{name:"rotateControl",options:{position:t&&e.ControlPosition[t]}}}),null}try{r.displayName="RotateControl",r.__docgenInfo={description:"",displayName:"RotateControl",props:{position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map.",name:"position",required:!1,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/controls/RotateControl.ts#RotateControl"]={docgenInfo:r.__docgenInfo,name:"RotateControl",path:"src/controls/RotateControl.ts#RotateControl"})}catch(a){}},"./src/controls/ScaleControl.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return r});var o=t("./src/controls/internal/useMapControl.ts");function r(){return Object(o.a)(function(){return{name:"scaleControl"}}),null}},"./src/controls/StreetViewControl.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return r});var o=t("./src/controls/internal/useMapControl.ts");function r(e){var n=e.position,t=void 0===n?"TOP_LEFT":n;return Object(o.a)(function(e){return{name:"streetViewControl",options:{position:t&&e.ControlPosition[t]}}}),null}try{r.displayName="StreetViewControl",r.__docgenInfo={description:"",displayName:"StreetViewControl",props:{position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map. The\ndefault position is embedded within the navigation (zoom and pan)\ncontrols. If this position is empty or the same as that specified in the\nzoomControlOptions or panControlOptions, the Street View control will be\ndisplayed as part of the navigation controls. Otherwise, it will be\ndisplayed separately.",name:"position",required:!1,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/controls/StreetViewControl.ts#StreetViewControl"]={docgenInfo:r.__docgenInfo,name:"StreetViewControl",path:"src/controls/StreetViewControl.ts#StreetViewControl"})}catch(a){}},"./src/controls/ZoomControl.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return r});var o=t("./src/controls/internal/useMapControl.ts");function r(e){var n=e.position,t=void 0===n?"TOP_LEFT":n;return Object(o.a)(function(e){return{name:"zoomControl",options:{position:t&&e.ControlPosition[t]}}}),null}try{r.displayName="ZoomControl",r.__docgenInfo={description:"",displayName:"ZoomControl",props:{position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map.",name:"position",required:!1,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/controls/ZoomControl.ts#ZoomControl"]={docgenInfo:r.__docgenInfo,name:"ZoomControl",path:"src/controls/ZoomControl.ts#ZoomControl"})}catch(a){}},"./src/controls/internal/useMapControl.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return l});var o=t("./node_modules/react/index.js"),r=t("./src/context/GoogleMapsContext.ts"),a=t("./src/internal/useDeepCompareMemo.ts");function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e){var n=Object(r.d)(),t=e(Object(r.f)()),l=t.name,s=t.options,d=Object(a.a)(function(){return s||{}},[s]);Object(o.useEffect)(function(){var e;return n.setOptions((i(e={},l,!0),i(e,"".concat(l,"Options"),d),e)),function(){var e;n.setOptions((i(e={},l,!1),i(e,"".concat(l,"Options"),void 0),e))}},[l,d])}try{l.displayName="useMapControl",l.__docgenInfo={description:"",displayName:"useMapControl",props:{}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/controls/internal/useMapControl.ts#useMapControl"]={docgenInfo:l.__docgenInfo,name:"useMapControl",path:"src/controls/internal/useMapControl.ts#useMapControl"})}catch(s){}},"./src/data-layer/DataPolygon.ts":function(e,n,t){"use strict";var o,r=t("./node_modules/react/index.js"),a=t("./src/context/GoogleMapsContext.ts"),i=t("./src/internal/useDeepCompareMemo.ts"),l=t("./src/internal/useEventHandlers.ts"),s=t("./src/internal/useMemoOnce.ts");function d(e,n){return function(t){n&&t.feature===e&&n(t)}}function u(e){var n=e.geometry,t=e.fillColor,u=e.fillOpacity,c=e.strokeColor,p=e.strokeOpacity,h=e.strokeWeight,m=e.zIndex,f=e.clickable,g=void 0===f||f,y=e.onClick,T=e.onDoubleClick,O=e.onRightClick,C=e.onMouseOut,b=e.onMouseOver,_=e.onMouseDown,S=e.onMouseUp,E=Object(a.d)(),v=Object(a.f)(),R=Object(s.a)(function(){return new v.Data.Feature}),w=Object(i.a)(function(){return new v.Data.Polygon(n)},[n]),M=Object(r.useMemo)(function(){return{fillColor:t,fillOpacity:u,strokeColor:c,strokeOpacity:p,strokeWeight:h,zIndex:m,clickable:g}},[t,u,c,p,h,m,g]);return Object(r.useEffect)(function(){return E.data.add(R),function(){E.data.remove(R)}},[]),Object(r.useEffect)(function(){R.setGeometry(w)},[w]),Object(r.useEffect)(function(){E.data.overrideStyle(R,M)},[M]),Object(l.a)(E.data,o,{onClick:d(R,y),onDoubleClick:d(R,T),onRightClick:d(R,O),onMouseOut:d(R,C),onMouseOver:d(R,b),onMouseDown:d(R,_),onMouseUp:d(R,S)}),null}!function(e){e.onClick="click",e.onDoubleClick="dblclick",e.onRightClick="rightclick",e.onMouseOut="mouseout",e.onMouseOver="mouseover",e.onMouseDown="mousedown",e.onMouseUp="mouseup"}(o||(o={})),t.d(n,"a",function(){return u});try{u.displayName="DataPolygon",u.__docgenInfo={description:"",displayName:"DataPolygon",props:{geometry:{defaultValue:null,description:"Array of array of positions.",name:"geometry",required:!0,type:{name:"LatLngLiteral[][]"}},clickable:{defaultValue:null,description:"If true, the marker receives mouse and touch events.",name:"clickable",required:!1,type:{name:"boolean"}},fillColor:{defaultValue:null,description:"The fill color.\n\nAll CSS3 colors are supported except for extended named colors.",name:"fillColor",required:!1,type:{name:"string"}},fillOpacity:{defaultValue:null,description:"he fill opacity between 0.0 and 1.0.",name:"fillOpacity",required:!1,type:{name:"number"}},strokeColor:{defaultValue:null,description:"The stroke color.\n\nAll CSS3 colors are supported except for extended named colors.",name:"strokeColor",required:!1,type:{name:"string"}},strokeOpacity:{defaultValue:null,description:"The stroke opacity between 0.0 and 1.0.",name:"strokeOpacity",required:!1,type:{name:"number"}},strokeWeight:{defaultValue:null,description:"The stroke width in pixels.",name:"strokeWeight",required:!1,type:{name:"number"}},zIndex:{defaultValue:null,description:"All features are displayed on the map in order of their zIndex,\nwith higher values displaying in front of features with lower values.",name:"zIndex",required:!1,type:{name:"number"}},onClick:{defaultValue:null,description:"This handler is called for a click on the geometry.",name:"onClick",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}},onDoubleClick:{defaultValue:null,description:"This handler is called for a double click on the geometry.",name:"onDoubleClick",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}},onRightClick:{defaultValue:null,description:"This handler is called for a right click on the geometry.",name:"onRightClick",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}},onMouseOut:{defaultValue:null,description:"This handler is called when the mouse leaves the area of the geometry.",name:"onMouseOut",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}},onMouseOver:{defaultValue:null,description:"This handler is called when the mouse enters the area of the geometry.",name:"onMouseOver",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}},onMouseDown:{defaultValue:null,description:"This handler is called for a mouse down on the geometry.",name:"onMouseDown",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}},onMouseUp:{defaultValue:null,description:"This handler is called for a mouse up on the geometry.",name:"onMouseUp",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/data-layer/DataPolygon.ts#DataPolygon"]={docgenInfo:u.__docgenInfo,name:"DataPolygon",path:"src/data-layer/DataPolygon.ts#DataPolygon"})}catch(c){}},"./src/drawing-control/DrawingControl.ts":function(e,n,t){"use strict";var o,r=t("./node_modules/react/index.js"),a=t("./src/context/GoogleMapsContext.ts"),i=t("./src/internal/useDeepCompareMemo.ts"),l=t("./src/internal/useEventHandlers.ts"),s=t("./src/internal/useMemoOnce.ts"),d=t("./src/internal/useUpdateEffect.ts");function u(e){var n=e.position,t=void 0===n?"TOP_LEFT":n,u=e.drawingModes,c=void 0===u?["CIRCLE","MARKER","POLYGON","POLYLINE","RECTANGLE"]:u,p=e.onCircleComplete,h=e.onMarkerComplete,m=e.onOverlayComplete,f=e.onPolygonComplete,g=e.onPolylineComplete,y=e.onRectangleComplete,T=Object(a.d)(),O=Object(a.f)(),C=Object(i.a)(function(){return{drawingControl:!0,drawingControlOptions:{position:O.ControlPosition[t],drawingModes:c.map(function(e){return O.drawing.OverlayType[e]})}}},[t,c]),b=Object(s.a)(function(){return new O.drawing.DrawingManager(C)});return Object(r.useEffect)(function(){return b.setMap(T),function(){b.setMap(null)}},[]),Object(d.a)(function(){b.setOptions(C)},[C]),Object(l.a)(b,o,{onCircleComplete:p,onMarkerComplete:h,onPolygonComplete:f,onPolylineComplete:g,onRectangleComplete:y,onOverlayComplete:function(e){function n(n){return e.apply(this,arguments)}return n.toString=function(){return e.toString()},n}(function(e){e.overlay.setMap(null),m&&m(e)})}),null}!function(e){e.onCircleComplete="circlecomplete",e.onMarkerComplete="markercomplete",e.onOverlayComplete="overlaycomplete",e.onPolygonComplete="polygoncomplete",e.onPolylineComplete="polylinecomplete",e.onRectangleComplete="rectanglecomplete"}(o||(o={})),t.d(n,"a",function(){return u});try{u.displayName="DrawingControl",u.__docgenInfo={description:"",displayName:"DrawingControl",props:{position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map.",name:"position",required:!1,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}},drawingModes:{defaultValue:null,description:"The drawing modes to display in the drawing control, in the order in\nwhich they are to be displayed.\n\nThe hand icon (which corresponds to the null drawing mode)\nis always available and is not to be specified in this array.",name:"drawingModes",required:!1,type:{name:'("CIRCLE" | "MARKER" | "POLYGON" | "POLYLINE" | "RECTANGLE")[]'}},onCircleComplete:{defaultValue:null,description:"This handler is called when the user has finished drawing a `circle`.",name:"onCircleComplete",required:!1,type:{name:"() => void"}},onMarkerComplete:{defaultValue:null,description:"This handler is called when the user has finished drawing a `marker`.",name:"onMarkerComplete",required:!1,type:{name:"() => void"}},onOverlayComplete:{defaultValue:null,description:"This handler is called when the user has finished drawing an `overlay`\nof any type.",name:"onOverlayComplete",required:!1,type:{name:"(event: OverlayCompleteEvent) => void"}},onPolygonComplete:{defaultValue:null,description:"This handler is called when the user has finished drawing a `polygon`.",name:"onPolygonComplete",required:!1,type:{name:"() => void"}},onPolylineComplete:{defaultValue:null,description:"This handler is called when the user has finished drawing a `polyline`.",name:"onPolylineComplete",required:!1,type:{name:"() => void"}},onRectangleComplete:{defaultValue:null,description:"This handler is called when the user has finished drawing a `rectangle`.",name:"onRectangleComplete",required:!1,type:{name:"() => void"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/drawing-control/DrawingControl.ts#DrawingControl"]={docgenInfo:u.__docgenInfo,name:"DrawingControl",path:"src/drawing-control/DrawingControl.ts#DrawingControl"})}catch(c){}},"./src/info-window/InfoWindow.ts":function(e,n,t){"use strict";var o,r=t("./node_modules/react/index.js"),a=t("./node_modules/react-dom/index.js"),i=t("./src/context/GoogleMapsContext.ts"),l=t("./src/internal/MapsUtils.ts"),s=t("./src/internal/useChangedProps.ts"),d=t("./src/internal/useEventHandlers.ts"),u=t("./src/internal/useMemoOnce.ts"),c=t("./src/internal/useUpdateEffect.ts");function p(e){var n=e.children,t=e.position,p=e.maxWidth,h=e.zIndex,m=e.pixelOffset,f=e.disableAutoPan,g=void 0!==f&&f,y=e.onCloseClick,T=Object(i.d)(),O=Object(i.f)(),C=Object(u.a)(function(){return document.createElement("div")}),b={maxWidth:p,zIndex:h,disableAutoPan:g,position:Object(l.a)(O,t),content:"string"===typeof n?n:C,pixelOffset:m&&Object(l.e)(O,m)},_=Object(u.a)(function(){return new O.InfoWindow(b)}),S=Object(s.a)(b);return Object(r.useEffect)(function(){return _.open(T),function(){_.close()}},[]),Object(c.a)(function(){_.open(T)},[p]),Object(r.useEffect)(function(){S&&_.setOptions(S)},[S]),Object(d.a)(_,o,{onCloseClick:function(e){function n(){return e.apply(this,arguments)}return n.toString=function(){return e.toString()},n}(function(){_.open(T),y&&y()})}),"string"===typeof n?null:Object(a.createPortal)(n,C)}!function(e){e.onCloseClick="closeclick"}(o||(o={})),t.d(n,"a",function(){return p});try{p.displayName="InfoWindow",p.__docgenInfo={description:"",displayName:"InfoWindow",props:{onCloseClick:{defaultValue:null,description:"This handler is called when the close button was clicked.",name:"onCloseClick",required:!1,type:{name:"() => void"}},position:{defaultValue:null,description:"The LatLng at which to display this `InfoWindow`.",name:"position",required:!0,type:{name:"LatLngLiteral"}},children:{defaultValue:null,description:"Content to display in the `InfoWindow`.",name:"children",required:!0,type:{name:"any"}},disableAutoPan:{defaultValue:null,description:"Disable auto-pan on open.",name:"disableAutoPan",required:!1,type:{name:"boolean"}},maxWidth:{defaultValue:null,description:"Maximum width of the `InfoWindow`, regardless of content's width.",name:"maxWidth",required:!1,type:{name:"number"}},pixelOffset:{defaultValue:null,description:"The offset, in pixels, of the tip of the info window from the point\non the map at whose geographical coordinates the info window is anchored.",name:"pixelOffset",required:!1,type:{name:"SizeLiteral"}},zIndex:{defaultValue:null,description:"All InfoWindows are displayed on the map in order of their zIndex,\nwith higher values displaying in front of InfoWindows with lower values.\n\nBy default, InfoWindows are displayed according to their latitude,\nwith InfoWindows of lower latitudes appearing in front of InfoWindows\nat higher latitudes.\n\nInfoWindows are always displayed in front of markers.",name:"zIndex",required:!1,type:{name:"number"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/info-window/InfoWindow.ts#InfoWindow"]={docgenInfo:p.__docgenInfo,name:"InfoWindow",path:"src/info-window/InfoWindow.ts#InfoWindow"})}catch(h){}},"./src/internal/useMemoOnce.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return r});var o=t("./node_modules/react/index.js");function r(e){var n=Object(o.useRef)(null);return n.current||(n.current=e()),n.current}try{r.displayName="useMemoOnce",r.__docgenInfo={description:"",displayName:"useMemoOnce",props:{}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/internal/useMemoOnce.ts#useMemoOnce"]={docgenInfo:r.__docgenInfo,name:"useMemoOnce",path:"src/internal/useMemoOnce.ts#useMemoOnce"})}catch(a){}},"./src/internal/useUpdateEffect.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return r});var o=t("./node_modules/react/index.js");function r(e,n){var t=Object(o.useRef)(!1);Object(o.useEffect)(function(){if(t.current)return e();t.current=!0},n)}},"./src/marker/Marker.tsx":function(e,n,t){"use strict";var o,r=t("./node_modules/react/index.js"),a=t.n(r),i=t("./src/context/GoogleMapsContext.ts"),l=t("./src/internal/MapsUtils.ts"),s=t("./src/internal/useChangedProps.ts"),d=t("./src/internal/useEventHandlers.ts"),u=t("./src/internal/useMemoOnce.ts");function c(e){var n=e.position,t=e.title,c=e.visible,p=e.clickable,h=e.draggable,m=e.cursor,f=e.label,g=e.opacity,y=e.optimized,T=e.shape,O=e.zIndex,C=e.icon,b=e.animation,_=e.onClick,S=e.onDoubleClick,E=e.onRightClick,v=e.onMouseOut,R=e.onMouseOver,w=e.onMouseDown,M=e.onMouseUp,k=e.onDrag,I=e.onDragStart,V=e.onDragEnd,P=e.onPositionChanged,L=Object(i.d)(),q=Object(i.f)(),A={title:t,visible:c,clickable:p,draggable:h,cursor:m,label:f,opacity:g,optimized:y,shape:T,zIndex:O,position:Object(l.a)(q,n),animation:b&&q.Animation[b]};"string"===typeof C&&(A.icon=C);var x=Object(s.a)(A),B=Object(u.a)(function(){return new q.Marker(A)}),D=Object(r.useRef)(B.getPosition());return Object(r.useEffect)(function(){return B.setMap(L),function(){B.setMap(null)}},[]),Object(r.useEffect)(function(){x&&B.setOptions(x)},[x]),Object(d.a)(B,o,{onClick:_,onDoubleClick:S,onRightClick:E,onMouseOut:v,onMouseOver:R,onMouseDown:w,onMouseUp:M,onDrag:k,onDragStart:function(e){function n(){return e.apply(this,arguments)}return n.toString=function(){return e.toString()},n}(function(){D.current=B.getPosition(),I&&I()}),onDragEnd:function(e){function n(){return e.apply(this,arguments)}return n.toString=function(){return e.toString()},n}(function(){B.setPosition(D.current),V&&V()}),onPositionChanged:P}),A.icon?null:a.a.createElement(i.b.Provider,{value:B},C)}!function(e){e.onClick="click",e.onDoubleClick="dblclick",e.onRightClick="rightclick",e.onMouseOut="mouseout",e.onMouseOver="mouseover",e.onMouseDown="mousedown",e.onMouseUp="mouseup",e.onDrag="drag",e.onDragStart="dragstart",e.onDragEnd="dragend",e.onPositionChanged="position_changed"}(o||(o={})),t.d(n,"a",function(){return c});try{c.displayName="Marker",c.__docgenInfo={description:"",displayName:"Marker",props:{position:{defaultValue:null,description:"Marker position.",name:"position",required:!0,type:{name:"LatLngLiteral"}},title:{defaultValue:null,description:"Rollover text.",name:"title",required:!1,type:{name:"string"}},visible:{defaultValue:null,description:"If `true`, the marker is visible.",name:"visible",required:!1,type:{name:"boolean"}},clickable:{defaultValue:null,description:"If `true`, the marker receives mouse and touch events.",name:"clickable",required:!1,type:{name:"boolean"}},draggable:{defaultValue:null,description:"If `true`, the marker can be dragged.",name:"draggable",required:!1,type:{name:"boolean"}},animation:{defaultValue:null,description:"Which animation to play when marker is added to a map.",name:"animation",required:!1,type:{name:'"BOUNCE" | "DROP"'}},cursor:{defaultValue:null,description:"Mouse cursor to show on hover.",name:"cursor",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"Icon for the foreground.",name:"icon",required:!1,type:{name:"any"}},label:{defaultValue:null,description:"Adds a label to the marker.\n\nThe label can either be a `string`, or a [google.maps.MarkerLabel](https://developers.google.com/maps/documentation/javascript/3.exp/reference#MarkerLabel) object.",name:"label",required:!1,type:{name:"string | MarkerLabel"}},opacity:{defaultValue:null,description:"The marker's opacity between 0.0 and 1.0.",name:"opacity",required:!1,type:{name:"number"}},optimized:{defaultValue:null,description:"Optimization renders many markers as a single static element.\n\nDisable optimized rendering for animated GIFs or PNGs,\nor when each marker must be rendered as a separate DOM element\n(advanced usage only).",name:"optimized",required:!1,type:{name:"boolean"}},shape:{defaultValue:null,description:"Image map region definition used for drag/click.\n\nSee also: [google.maps.MarkerShape](https://developers.google.com/maps/documentation/javascript/3.exp/reference#MarkerShape)",name:"shape",required:!1,type:{name:"MarkerShape"}},zIndex:{defaultValue:null,description:"All markers are displayed on the map in order of their zIndex,\nwith higher values displaying in front of markers with lower values.\nBy default, markers are displayed according to their vertical position on screen,\nwith lower markers appearing in front of markers further up the screen.",name:"zIndex",required:!1,type:{name:"number"}},onClick:{defaultValue:null,description:"This handlers is called when the marker icon was clicked.",name:"onClick",required:!1,type:{name:"() => void"}},onDoubleClick:{defaultValue:null,description:"This handlers is called when the marker icon was double clicked.",name:"onDoubleClick",required:!1,type:{name:"() => void"}},onRightClick:{defaultValue:null,description:"This handlers is called when the marker icon was clicked.",name:"onRightClick",required:!1,type:{name:"() => void"}},onMouseDown:{defaultValue:null,description:"This handlers is called for a mouse down on the marker.",name:"onMouseDown",required:!1,type:{name:"() => void"}},onMouseOut:{defaultValue:null,description:"This handlers is called when the mouse leaves the area of the marker icon.",name:"onMouseOut",required:!1,type:{name:"() => void"}},onMouseOver:{defaultValue:null,description:"This handlers is called when the mouse enters the area of the marker icon.",name:"onMouseOver",required:!1,type:{name:"() => void"}},onMouseUp:{defaultValue:null,description:"This handlers is called when for a mouse up on the marker.",name:"onMouseUp",required:!1,type:{name:"() => void"}},onDrag:{defaultValue:null,description:"This handlers is called when the marker icon was clicked.",name:"onDrag",required:!1,type:{name:"() => void"}},onDragStart:{defaultValue:null,description:"This handlers is called when the marker icon was clicked.",name:"onDragStart",required:!1,type:{name:"() => void"}},onDragEnd:{defaultValue:null,description:"This handlers is called when the marker icon was clicked.",name:"onDragEnd",required:!1,type:{name:"() => void"}},onPositionChanged:{defaultValue:null,description:"This handlers is called when the marker `position` property changes.",name:"onPositionChanged",required:!1,type:{name:"() => void"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/marker/Marker.tsx#Marker"]={docgenInfo:c.__docgenInfo,name:"Marker",path:"src/marker/Marker.tsx#Marker"})}catch(p){}},"./src/marker/MarkerIcon.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return l});var o=t("./node_modules/react/index.js"),r=t("./src/context/GoogleMapsContext.ts"),a=t("./src/internal/MapsUtils.ts"),i=t("./src/internal/useDeepCompareMemo.ts");function l(e){var n=e.url,t=e.anchor,l=e.labelOrigin,s=e.size,d=e.scaledSize,u=e.origin,c=void 0===u?{x:0,y:0}:u,p=Object(r.f)(),h=Object(r.e)(),m=Object(i.a)(function(){return{url:n,anchor:t&&Object(a.d)(p,t),origin:c&&Object(a.d)(p,c),labelOrigin:l&&Object(a.d)(p,l),size:s&&Object(a.e)(p,s),scaledSize:d&&Object(a.e)(p,d)}},[n,t,l,s,d,c]);return Object(o.useEffect)(function(){h.setIcon(m)},[m]),null}try{l.displayName="MarkerIcon",l.__docgenInfo={description:"",displayName:"MarkerIcon",props:{url:{defaultValue:null,description:"The URL of the image or sprite sheet.",name:"url",required:!0,type:{name:"string"}},anchor:{defaultValue:null,description:"The position at which to anchor an image in correspondence to the location of the marker on the map.\n\nBy default, the anchor is located along the center point of the bottom of the image.",name:"anchor",required:!1,type:{name:"PointLiteral"}},labelOrigin:{defaultValue:null,description:"The origin of the label relative to the top-left corner of the icon image, if a label is supplied by the marker.\n\nBy default, the origin is located in the center point of the image.",name:"labelOrigin",required:!1,type:{name:"PointLiteral"}},origin:{defaultValue:null,description:"The position of the image within a sprite, if any.",name:"origin",required:!1,type:{name:"PointLiteral"}},size:{defaultValue:null,description:"The display size of the sprite or image.\n\nWhen using sprites, you must specify the sprite size.\n\nIf the size is not provided, it will be set when the image loads.",name:"size",required:!1,type:{name:"SizeLiteral"}},scaledSize:{defaultValue:null,description:"The size of the entire image after scaling, if any.\n\nUse this property to stretch/shrink an image or a sprite.",name:"scaledSize",required:!1,type:{name:"SizeLiteral"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/marker/MarkerIcon.ts#MarkerIcon"]={docgenInfo:l.__docgenInfo,name:"MarkerIcon",path:"src/marker/MarkerIcon.ts#MarkerIcon"})}catch(s){}},"./src/marker/MarkerSymbol.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return l});var o=t("./node_modules/react/index.js"),r=t("./src/context/GoogleMapsContext.ts"),a=t("./src/internal/MapsUtils.ts"),i=t("./src/internal/useDeepCompareMemo.ts");function l(e){var n=e.path,t=e.rotation,l=void 0===t?0:t,s=e.scale,d=void 0===s?1:s,u=e.fillColor,c=void 0===u?"black":u,p=e.fillOpacity,h=void 0===p?0:p,m=e.strokeColor,f=void 0===m?"black":m,g=e.strokeOpacity,y=void 0===g?1:g,T=e.strokeWeight,O=void 0===T?1:T,C=e.anchor,b=void 0===C?{x:0,y:0}:C,_=Object(r.f)(),S=Object(r.e)(),E=Object(i.a)(function(){return{path:n,rotation:l,scale:d,fillColor:c,fillOpacity:h,strokeColor:f,strokeOpacity:y,strokeWeight:O,anchor:Object(a.d)(_,b)}},[n,d,b,l,c,h,f,y,O]);return Object(o.useEffect)(function(){S.setIcon(E)},[E]),null}try{l.displayName="MarkerSymbol",l.__docgenInfo={description:"",displayName:"MarkerSymbol",props:{path:{defaultValue:null,description:"Built-in symbol path, or a custom path expressed using\n[SVG path notation](http://www.w3.org/TR/SVG/paths.html#PathData).",name:"path",required:!0,type:{name:"string"}},rotation:{defaultValue:null,description:"The angle by which to rotate the symbol, expressed clockwise in degrees.",name:"rotation",required:!1,type:{name:"number"}},scale:{defaultValue:null,description:"The amount by which the symbol is scaled in size.",name:"scale",required:!1,type:{name:"number"}},anchor:{defaultValue:null,description:"The position of the symbol relative to the marker.\nThe coordinates of the symbol's path are translated left and up by the\nanchor's x and y coordinates respectively.",name:"anchor",required:!1,type:{name:"PointLiteral"}},fillColor:{defaultValue:null,description:"The symbol's fill color.\n\nAll CSS3 colors are supported except for extended named colors.",name:"fillColor",required:!1,type:{name:"string"}},fillOpacity:{defaultValue:null,description:"The symbol's fill opacity.",name:"fillOpacity",required:!1,type:{name:"number"}},strokeColor:{defaultValue:null,description:"The symbol's stroke color.\n\nAll CSS3 colors are supported except for extended named colors.",name:"strokeColor",required:!1,type:{name:"string"}},strokeOpacity:{defaultValue:null,description:"The symbol's stroke opacity.",name:"strokeOpacity",required:!1,type:{name:"number"}},strokeWeight:{defaultValue:null,description:"The symbol's stroke weight.",name:"strokeWeight",required:!1,type:{name:"number"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/marker/MarkerSymbol.ts#MarkerSymbol"]={docgenInfo:l.__docgenInfo,name:"MarkerSymbol",path:"src/marker/MarkerSymbol.ts#MarkerSymbol"})}catch(s){}},"./src/polyline/Polyline.ts":function(e,n,t){"use strict";var o,r=t("./node_modules/react/index.js"),a=t("./src/context/GoogleMapsContext.ts"),i=t("./src/internal/MapsUtils.ts"),l=t("./src/internal/useChangedProps.ts"),s=t("./src/internal/useEventHandlers.ts"),d=t("./src/internal/useMemoOnce.ts");function u(e){var n=e.path,t=e.zIndex,u=e.strokeColor,c=e.strokeWeight,p=e.strokeOpacity,h=e.visible,m=void 0===h||h,f=e.geodesic,g=void 0!==f&&f,y=e.clickable,T=void 0===y||y,O=e.draggable,C=void 0!==O&&O,b=e.onClick,_=e.onDoubleClick,S=e.onRightClick,E=e.onMouseOut,v=e.onMouseOver,R=e.onMouseMove,w=e.onMouseDown,M=e.onMouseUp,k=e.onDrag,I=e.onDragStart,V=e.onDragEnd,P=Object(a.d)(),L=Object(a.f)(),q={zIndex:t,visible:m,geodesic:g,clickable:T,draggable:C,strokeColor:u,strokeWeight:c,strokeOpacity:p,path:Object(i.c)(L,n,function(e){return Object(i.a)(L,e)})},A=Object(d.a)(function(){return new L.Polyline(q)}),x=Object(l.a)(q),B=Object(r.useRef)(A.getPath());return Object(r.useEffect)(function(){return A.setMap(P),function(){A.setMap(null)}},[]),Object(r.useEffect)(function(){x&&A.setOptions(x)},[x]),Object(s.a)(A,o,{onClick:b,onDoubleClick:_,onRightClick:S,onMouseOut:E,onMouseOver:v,onMouseMove:R,onMouseDown:w,onMouseUp:M,onDrag:k,onDragStart:function(e){function n(){return e.apply(this,arguments)}return n.toString=function(){return e.toString()},n}(function(){B.current=A.getPath(),I&&I()}),onDragEnd:function(e){function n(n){return e.apply(this,arguments)}return n.toString=function(){return e.toString()},n}(function(e){e&&Object.assign(e,{path:A.getPath().getArray()}),A.setPath(B.current),V&&V(e)})}),null}!function(e){e.onClick="click",e.onDoubleClick="dblclick",e.onRightClick="rightclick",e.onMouseOut="mouseout",e.onMouseOver="mouseover",e.onMouseMove="mousemove",e.onMouseDown="mousedown",e.onMouseUp="mouseup",e.onDrag="drag",e.onDragStart="dragstart",e.onDragEnd="dragend"}(o||(o={})),t.d(n,"a",function(){return u});try{u.displayName="Polyline",u.__docgenInfo={description:"",displayName:"Polyline",props:{draggable:{defaultValue:null,description:"If set to true, the user can drag this shape over the map.\n\nThe `geodesic` property defines the mode of dragging.",name:"draggable",required:!1,type:{name:"boolean"}},clickable:{defaultValue:null,description:"Indicates whether this `Polyline` handles mouse events.",name:"clickable",required:!1,type:{name:"boolean"}},geodesic:{defaultValue:null,description:"When `true`, edges of the polygon are interpreted as geodesic and will follow the curvature of the Earth.\nWhen `false`, edges of the polygon are rendered as straight lines in screen space.\n\nNote that the shape of a geodesic polygon may appear to change when dragged,\nas the dimensions are maintained relative to the surface of the earth.",name:"geodesic",required:!1,type:{name:"boolean"}},visible:{defaultValue:null,description:"Whether this `Polyline` is visible on the map.",name:"visible",required:!1,type:{name:"boolean"}},path:{defaultValue:null,description:"The ordered sequence of coordinates of the `Polyline`.",name:"path",required:!0,type:{name:"LatLngLiteral[]"}},strokeColor:{defaultValue:null,description:"The stroke color.\n\nAll CSS3 colors are supported except for extended named colors.",name:"strokeColor",required:!1,type:{name:"string"}},strokeOpacity:{defaultValue:null,description:"The stroke opacity between 0.0 and 1.0.",name:"strokeOpacity",required:!1,type:{name:"number"}},strokeWeight:{defaultValue:null,description:"The stroke width in pixels.",name:"strokeWeight",required:!1,type:{name:"number"}},zIndex:{defaultValue:null,description:"The zIndex compared to other polys.",name:"zIndex",required:!1,type:{name:"number"}},onClick:{defaultValue:null,description:"This handler is fired when the DOM `click` handlers is fired on the `Polyline`.",name:"onClick",required:!1,type:{name:"() => void"}},onDoubleClick:{defaultValue:null,description:"This handler is fired when the DOM `dblclick` handlers is fired on the `Polyline`.",name:"onDoubleClick",required:!1,type:{name:"() => void"}},onRightClick:{defaultValue:null,description:"This handler is fired when the `Polyline` is right-clicked on.",name:"onRightClick",required:!1,type:{name:"() => void"}},onMouseOut:{defaultValue:null,description:"This handler is fired on `mouseout` handlers is fired on `Polyline`.",name:"onMouseOut",required:!1,type:{name:"() => void"}},onMouseOver:{defaultValue:null,description:"This handler is fired on `mouseover` handlers is fired on `Polyline`.",name:"onMouseOver",required:!1,type:{name:"() => void"}},onMouseMove:{defaultValue:null,description:"This handler is fired when the DOM `mousemove` handlers is fired\non `Polyline`.",name:"onMouseMove",required:!1,type:{name:"() => void"}},onMouseDown:{defaultValue:null,description:"This handler is fired when the DOM `mousedown` handlers is fired\non `Polyline`.",name:"onMouseDown",required:!1,type:{name:"() => void"}},onMouseUp:{defaultValue:null,description:"This handler is fired when the DOM `mouseup` handlers is fired\non `Polyline`.",name:"onMouseUp",required:!1,type:{name:"() => void"}},onDrag:{defaultValue:null,description:"This handler is repeatedly fired while the user drags the `Polyline`.",name:"onDrag",required:!1,type:{name:"() => void"}},onDragStart:{defaultValue:null,description:"This handler is fired when the user starts dragging the `Polyline`.",name:"onDragStart",required:!1,type:{name:"() => void"}},onDragEnd:{defaultValue:null,description:"This handler is fired when the user stops dragging the `Polyline`.",name:"onDragEnd",required:!1,type:{name:"(event?: { path: LatLng[]; }) => void"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/polyline/Polyline.ts#Polyline"]={docgenInfo:u.__docgenInfo,name:"Polyline",path:"src/polyline/Polyline.ts#Polyline"})}catch(c){}},"./src/transitions/FitBounds.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return l});var o=t("./node_modules/react/index.js"),r=t("./src/context/GoogleMapsContext.ts"),a=t("./src/internal/MapsUtils.ts"),i=t("./src/internal/useDeepCompareMemo.ts");function l(e){var n=e.bounds,t=Object(r.d)(),l=Object(r.f)(),s=Object(i.a)(function(){return Object(a.b)(l,n)},[n]);return Object(o.useEffect)(function(){t.fitBounds(s)},[s]),null}try{l.displayName="FitBounds",l.__docgenInfo={description:"",displayName:"FitBounds",props:{bounds:{defaultValue:null,description:"Rectangle from the points at its south-west and north-east corners.",name:"bounds",required:!0,type:{name:"LatLngBoundsLiteral"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transitions/FitBounds.ts#FitBounds"]={docgenInfo:l.__docgenInfo,name:"FitBounds",path:"src/transitions/FitBounds.ts#FitBounds"})}catch(s){}},"./src/transitions/PanBy.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return a});var o=t("./node_modules/react/index.js"),r=t("./src/context/GoogleMapsContext.ts");function a(e){var n=e.offset,t=n.x,a=n.y,i=Object(r.d)();return Object(o.useEffect)(function(){i.panBy(t,a)},[t,a]),null}try{a.displayName="PanBy",a.__docgenInfo={description:"",displayName:"PanBy",props:{offset:{defaultValue:null,description:"Defines the distance to coordinate from west to east and north to south in pixels.",name:"offset",required:!0,type:{name:"PointLiteral"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transitions/PanBy.ts#PanBy"]={docgenInfo:a.__docgenInfo,name:"PanBy",path:"src/transitions/PanBy.ts#PanBy"})}catch(i){}},"./src/transitions/PanTo.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return i});var o=t("./node_modules/react/index.js"),r=t("./src/context/GoogleMapsContext.ts"),a=t("./src/internal/MapsUtils.ts");function i(e){var n=e.position,t=n.lat,i=n.lng,l=Object(r.d)(),s=Object(r.f)(),d=Object(a.a)(s,{lat:t,lng:i});return Object(o.useEffect)(function(){l.panTo(d)},[d.lat(),d.lng()]),null}try{i.displayName="PanTo",i.__docgenInfo={description:"",displayName:"PanTo",props:{position:{defaultValue:null,description:"Defines the next map center position.",name:"position",required:!0,type:{name:"LatLngLiteral"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transitions/PanTo.ts#PanTo"]={docgenInfo:i.__docgenInfo,name:"PanTo",path:"src/transitions/PanTo.ts#PanTo"})}catch(l){}},"./src/transitions/PanToBounds.ts":function(e,n,t){"use strict";t.d(n,"a",function(){return l});var o=t("./node_modules/react/index.js"),r=t("./src/context/GoogleMapsContext.ts"),a=t("./src/internal/MapsUtils.ts"),i=t("./src/internal/useDeepCompareMemo.ts");function l(e){var n=e.bounds,t=Object(r.d)(),l=Object(r.f)(),s=Object(i.a)(function(){return Object(a.b)(l,n)},[n]);return Object(o.useEffect)(function(){t.panToBounds(s)},[s]),null}try{l.displayName="PanToBounds",l.__docgenInfo={description:"",displayName:"PanToBounds",props:{bounds:{defaultValue:null,description:"Rectangle from the points at its south-west and north-east corners.",name:"bounds",required:!0,type:{name:"LatLngBoundsLiteral"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transitions/PanToBounds.ts#PanToBounds"]={docgenInfo:l.__docgenInfo,name:"PanToBounds",path:"src/transitions/PanToBounds.ts#PanToBounds"})}catch(s){}},"./src/transitions/__docs__/TransitionExample.tsx":function(e,n,t){"use strict";var o=t("./node_modules/react/index.js"),r=t.n(o),a=t("./src/__docs__/DocsComponents.tsx"),i=(t("./src/context/GoogleMapsContext.ts"),t("./src/controls/CustomControl.ts"));t("./src/controls/FullscreenControl.ts"),t("./src/controls/MapTypeControl.ts"),t("./src/controls/RotateControl.ts"),t("./src/controls/ScaleControl.ts"),t("./src/controls/StreetViewControl.ts"),t("./src/controls/ZoomControl.ts"),t("./src/data-layer/DataPolygon.ts"),t("./src/drawing-control/DrawingControl.ts"),t("./src/map/Map.tsx"),t("./src/info-window/InfoWindow.ts"),t("./src/marker/Marker.tsx"),t("./src/marker/MarkerIcon.ts"),t("./src/marker/MarkerSymbol.ts"),t("./src/polyline/Polyline.ts"),t("./src/transitions/FitBounds.ts"),t("./src/transitions/PanBy.ts"),t("./src/transitions/PanTo.ts"),t("./src/transitions/PanToBounds.ts"),t("./src/use-google-maps-loader/useGoogleMapsLoader.ts");try{CustomControl.displayName="CustomControl",CustomControl.__docgenInfo={description:"",displayName:"CustomControl",props:{children:{defaultValue:null,description:"Content of control.",name:"children",required:!0,type:{name:"any"}},position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map.",name:"position",required:!0,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#CustomControl"]={docgenInfo:CustomControl.__docgenInfo,name:"CustomControl",path:"src/index.ts#CustomControl"})}catch(h){}try{FullscreenControl.displayName="FullscreenControl",FullscreenControl.__docgenInfo={description:"",displayName:"FullscreenControl",props:{position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map.",name:"position",required:!1,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#FullscreenControl"]={docgenInfo:FullscreenControl.__docgenInfo,name:"FullscreenControl",path:"src/index.ts#FullscreenControl"})}catch(h){}try{MapTypeControl.displayName="MapTypeControl",MapTypeControl.__docgenInfo={description:"",displayName:"MapTypeControl",props:{position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map.",name:"position",required:!1,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}},style:{defaultValue:null,description:"Style id. Used to select what style of map type control to display.",name:"style",required:!1,type:{name:'"DEFAULT" | "DROPDOWN_MENU" | "HORIZONTAL_BAR"'}},mapTypeIds:{defaultValue:null,description:"IDs of map types to show in the control.",name:"mapTypeIds",required:!1,type:{name:'("HYBRID" | "ROADMAP" | "SATELLITE" | "TERRAIN")[]'}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#MapTypeControl"]={docgenInfo:MapTypeControl.__docgenInfo,name:"MapTypeControl",path:"src/index.ts#MapTypeControl"})}catch(h){}try{RotateControl.displayName="RotateControl",RotateControl.__docgenInfo={description:"",displayName:"RotateControl",props:{position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map.",name:"position",required:!1,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#RotateControl"]={docgenInfo:RotateControl.__docgenInfo,name:"RotateControl",path:"src/index.ts#RotateControl"})}catch(h){}try{StreetViewControl.displayName="StreetViewControl",StreetViewControl.__docgenInfo={description:"",displayName:"StreetViewControl",props:{position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map. The\ndefault position is embedded within the navigation (zoom and pan)\ncontrols. If this position is empty or the same as that specified in the\nzoomControlOptions or panControlOptions, the Street View control will be\ndisplayed as part of the navigation controls. Otherwise, it will be\ndisplayed separately.",name:"position",required:!1,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#StreetViewControl"]={docgenInfo:StreetViewControl.__docgenInfo,name:"StreetViewControl",path:"src/index.ts#StreetViewControl"})}catch(h){}try{ZoomControl.displayName="ZoomControl",ZoomControl.__docgenInfo={description:"",displayName:"ZoomControl",props:{position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map.",name:"position",required:!1,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#ZoomControl"]={docgenInfo:ZoomControl.__docgenInfo,name:"ZoomControl",path:"src/index.ts#ZoomControl"})}catch(h){}try{DataPolygon.displayName="DataPolygon",DataPolygon.__docgenInfo={description:"",displayName:"DataPolygon",props:{geometry:{defaultValue:null,description:"Array of array of positions.",name:"geometry",required:!0,type:{name:"LatLngLiteral[][]"}},clickable:{defaultValue:null,description:"If true, the marker receives mouse and touch events.",name:"clickable",required:!1,type:{name:"boolean"}},fillColor:{defaultValue:null,description:"The fill color.\n\nAll CSS3 colors are supported except for extended named colors.",name:"fillColor",required:!1,type:{name:"string"}},fillOpacity:{defaultValue:null,description:"he fill opacity between 0.0 and 1.0.",name:"fillOpacity",required:!1,type:{name:"number"}},strokeColor:{defaultValue:null,description:"The stroke color.\n\nAll CSS3 colors are supported except for extended named colors.",name:"strokeColor",required:!1,type:{name:"string"}},strokeOpacity:{defaultValue:null,description:"The stroke opacity between 0.0 and 1.0.",name:"strokeOpacity",required:!1,type:{name:"number"}},strokeWeight:{defaultValue:null,description:"The stroke width in pixels.",name:"strokeWeight",required:!1,type:{name:"number"}},zIndex:{defaultValue:null,description:"All features are displayed on the map in order of their zIndex,\nwith higher values displaying in front of features with lower values.",name:"zIndex",required:!1,type:{name:"number"}},onClick:{defaultValue:null,description:"This handler is called for a click on the geometry.",name:"onClick",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}},onDoubleClick:{defaultValue:null,description:"This handler is called for a double click on the geometry.",name:"onDoubleClick",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}},onRightClick:{defaultValue:null,description:"This handler is called for a right click on the geometry.",name:"onRightClick",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}},onMouseOut:{defaultValue:null,description:"This handler is called when the mouse leaves the area of the geometry.",name:"onMouseOut",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}},onMouseOver:{defaultValue:null,description:"This handler is called when the mouse enters the area of the geometry.",name:"onMouseOver",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}},onMouseDown:{defaultValue:null,description:"This handler is called for a mouse down on the geometry.",name:"onMouseDown",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}},onMouseUp:{defaultValue:null,description:"This handler is called for a mouse up on the geometry.",name:"onMouseUp",required:!1,type:{name:"(event: DataPolygonHandlerEvent) => void"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#DataPolygon"]={docgenInfo:DataPolygon.__docgenInfo,name:"DataPolygon",path:"src/index.ts#DataPolygon"})}catch(h){}try{DrawingControl.displayName="DrawingControl",DrawingControl.__docgenInfo={description:"",displayName:"DrawingControl",props:{position:{defaultValue:null,description:"Position id. Used to specify the position of the control on the map.",name:"position",required:!1,type:{name:'"BOTTOM_CENTER" | "BOTTOM_LEFT" | "BOTTOM_RIGHT" | "LEFT_BOTTOM" | "LEFT_CENTER" | "LEFT_TOP" | "RIGHT_BOTTOM" | "RIGHT_CENTER" | "RIGHT_TOP" | "TOP_CENTER" | "TOP_LEFT" | "TOP_RIGHT"'}},drawingModes:{defaultValue:null,description:"The drawing modes to display in the drawing control, in the order in\nwhich they are to be displayed.\n\nThe hand icon (which corresponds to the null drawing mode)\nis always available and is not to be specified in this array.",name:"drawingModes",required:!1,type:{name:'("CIRCLE" | "MARKER" | "POLYGON" | "POLYLINE" | "RECTANGLE")[]'}},onCircleComplete:{defaultValue:null,description:"This handler is called when the user has finished drawing a `circle`.",name:"onCircleComplete",required:!1,type:{name:"() => void"}},onMarkerComplete:{defaultValue:null,description:"This handler is called when the user has finished drawing a `marker`.",name:"onMarkerComplete",required:!1,type:{name:"() => void"}},onOverlayComplete:{defaultValue:null,description:"This handler is called when the user has finished drawing an `overlay`\nof any type.",name:"onOverlayComplete",required:!1,type:{name:"(event: OverlayCompleteEvent) => void"}},onPolygonComplete:{defaultValue:null,description:"This handler is called when the user has finished drawing a `polygon`.",name:"onPolygonComplete",required:!1,type:{name:"() => void"}},onPolylineComplete:{defaultValue:null,description:"This handler is called when the user has finished drawing a `polyline`.",name:"onPolylineComplete",required:!1,type:{name:"() => void"}},onRectangleComplete:{defaultValue:null,description:"This handler is called when the user has finished drawing a `rectangle`.",name:"onRectangleComplete",required:!1,type:{name:"() => void"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#DrawingControl"]={docgenInfo:DrawingControl.__docgenInfo,name:"DrawingControl",path:"src/index.ts#DrawingControl"})}catch(h){}try{Map.displayName="Map",Map.__docgenInfo={description:"",displayName:"Map",props:{center:{defaultValue:null,description:"The initial Map `center`.",name:"center",required:!0,type:{name:"LatLngLiteral"}},zoom:{defaultValue:null,description:"The initial Map `zoom` level.",name:"zoom",required:!0,type:{name:"number"}},mapTypeId:{defaultValue:null,description:"The initial Map `mapTypeId`.",name:"mapTypeId",required:!1,type:{name:'"HYBRID" | "ROADMAP" | "SATELLITE" | "TERRAIN"'}},children:{defaultValue:null,description:"Google Maps child components.",name:"children",required:!1,type:{name:"any"}},clickableIcons:{defaultValue:null,description:"When `false`, map icons are not clickable.\n\nA map icon represents a point of interest, also known as a POI.",name:"clickableIcons",required:!1,type:{name:"boolean"}},disableDoubleClickZoom:{defaultValue:null,description:"Enables/disables `zoom` and `center` on double click.",name:"disableDoubleClickZoom",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"Styles of map div.",name:"style",required:!1,type:{name:"any"}},className:{defaultValue:null,description:"Classes of map div.",name:"className",required:!1,type:{name:"string"}},backgroundColor:{defaultValue:null,description:"Color used for the background of the Map.\n\nThis color will be visible when tiles have not yet\nloaded as the user pans.",name:"backgroundColor",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"This handler is called when the user clicks on the map.\n\nAn `MouseEvent` with properties for the clicked location is returned unless a place icon was clicked, in which case an `IconMouseEvent` with a `placeid` is returned.",name:"onClick",required:!1,type:{name:"(event: MouseEvent | IconMouseEvent) => void"}},onDoubleClick:{defaultValue:null,description:"This handler is called when the user double-clicks on the map.\n\nNote that the `onClick` handler will be also called,\nright before this one.",name:"onDoubleClick",required:!1,type:{name:"(event: MouseEvent | IconMouseEvent) => void"}},onRightClick:{defaultValue:null,description:"This handler is called when the DOM context menu event is\nfired on the map container.",name:"onRightClick",required:!1,type:{name:"(event: MouseEvent | IconMouseEvent) => void"}},onMouseMove:{defaultValue:null,description:"This handler is called whenever the user's mouse moves over\nthe map container.",name:"onMouseMove",required:!1,type:{name:"() => void"}},onMouseOut:{defaultValue:null,description:"This handler is called when the user's mouse exits the map container.",name:"onMouseOut",required:!1,type:{name:"() => void"}},onMouseOver:{defaultValue:null,description:"This handler is called when the user's mouse enters the map container.",name:"onMouseOver",required:!1,type:{name:"() => void"}},onDrag:{defaultValue:null,description:"This handler is repeatedly called while the user drags the map.",name:"onDrag",required:!1,type:{name:"() => void"}},onDragEnd:{defaultValue:null,description:"This handler is called when the user stops dragging the map.",name:"onDragEnd",required:!1,type:{name:"() => void"}},onDragStart:{defaultValue:null,description:"This handler is called when the user starts dragging the map.",name:"onDragStart",required:!1,type:{name:"() => void"}},onIdle:{defaultValue:null,description:"This handler is called when the map becomes idle after panning or zooming.",name:"onIdle",required:!1,type:{name:"() => void"}},onTilesLoaded:{defaultValue:null,description:"This handler is called when the visible tiles have finished loading.",name:"onTilesLoaded",required:!1,type:{name:"() => void"}},onTiltChanged:{defaultValue:null,description:"This handler is called when the map `tilt` property changes.",name:"onTiltChanged",required:!1,type:{name:"() => void"}},onZoomChanged:{defaultValue:null,description:"This event is fired when the map `zoom` property changes.",name:"onZoomChanged",required:!1,type:{name:"(event: { zoom: number; }) => void"}},onBoundsChanged:{defaultValue:null,description:"This handler is called when the viewport bounds have changed.",name:"onBoundsChanged",required:!1,type:{name:"(event: { bounds: LatLngBoundsLiteral; }) => void"}},onCenterChanged:{defaultValue:null,description:"This handler is called when the map `center` property changes.",name:"onCenterChanged",required:!1,type:{name:"() => void"}},onHeadingChanged:{defaultValue:null,description:"This handler is called when the map `heading` property changes.",name:"onHeadingChanged",required:!1,type:{name:"() => void"}},onMapTypeIdChanged:{defaultValue:null,description:"This handler is called when the `mapTypeId` property changes.",name:"onMapTypeIdChanged",required:!1,type:{name:"() => void"}},onProjectionChanged:{defaultValue:null,description:"This handler is called when the `projection` has changed.",name:"onProjectionChanged",required:!1,type:{name:"() => void"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#Map"]={docgenInfo:Map.__docgenInfo,name:"Map",path:"src/index.ts#Map"})}catch(h){}try{InfoWindow.displayName="InfoWindow",InfoWindow.__docgenInfo={description:"",displayName:"InfoWindow",props:{onCloseClick:{defaultValue:null,description:"This handler is called when the close button was clicked.",name:"onCloseClick",required:!1,type:{name:"() => void"}},position:{defaultValue:null,description:"The LatLng at which to display this `InfoWindow`.",name:"position",required:!0,type:{name:"LatLngLiteral"}},children:{defaultValue:null,description:"Content to display in the `InfoWindow`.",name:"children",required:!0,type:{name:"any"}},disableAutoPan:{defaultValue:null,description:"Disable auto-pan on open.",name:"disableAutoPan",required:!1,type:{name:"boolean"}},maxWidth:{defaultValue:null,description:"Maximum width of the `InfoWindow`, regardless of content's width.",name:"maxWidth",required:!1,type:{name:"number"}},pixelOffset:{defaultValue:null,description:"The offset, in pixels, of the tip of the info window from the point\non the map at whose geographical coordinates the info window is anchored.",name:"pixelOffset",required:!1,type:{name:"SizeLiteral"}},zIndex:{defaultValue:null,description:"All InfoWindows are displayed on the map in order of their zIndex,\nwith higher values displaying in front of InfoWindows with lower values.\n\nBy default, InfoWindows are displayed according to their latitude,\nwith InfoWindows of lower latitudes appearing in front of InfoWindows\nat higher latitudes.\n\nInfoWindows are always displayed in front of markers.",name:"zIndex",required:!1,type:{name:"number"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#InfoWindow"]={docgenInfo:InfoWindow.__docgenInfo,name:"InfoWindow",path:"src/index.ts#InfoWindow"})}catch(h){}try{Marker.displayName="Marker",Marker.__docgenInfo={description:"",displayName:"Marker",props:{position:{defaultValue:null,description:"Marker position.",name:"position",required:!0,type:{name:"LatLngLiteral"}},title:{defaultValue:null,description:"Rollover text.",name:"title",required:!1,type:{name:"string"}},visible:{defaultValue:null,description:"If `true`, the marker is visible.",name:"visible",required:!1,type:{name:"boolean"}},clickable:{defaultValue:null,description:"If `true`, the marker receives mouse and touch events.",name:"clickable",required:!1,type:{name:"boolean"}},draggable:{defaultValue:null,description:"If `true`, the marker can be dragged.",name:"draggable",required:!1,type:{name:"boolean"}},animation:{defaultValue:null,description:"Which animation to play when marker is added to a map.",name:"animation",required:!1,type:{name:'"BOUNCE" | "DROP"'}},cursor:{defaultValue:null,description:"Mouse cursor to show on hover.",name:"cursor",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"Icon for the foreground.",name:"icon",required:!1,type:{name:"any"}},label:{defaultValue:null,description:"Adds a label to the marker.\n\nThe label can either be a `string`, or a [google.maps.MarkerLabel](https://developers.google.com/maps/documentation/javascript/3.exp/reference#MarkerLabel) object.",name:"label",required:!1,type:{name:"string | MarkerLabel"}},opacity:{defaultValue:null,description:"The marker's opacity between 0.0 and 1.0.",name:"opacity",required:!1,type:{name:"number"}},optimized:{defaultValue:null,description:"Optimization renders many markers as a single static element.\n\nDisable optimized rendering for animated GIFs or PNGs,\nor when each marker must be rendered as a separate DOM element\n(advanced usage only).",name:"optimized",required:!1,type:{name:"boolean"}},shape:{defaultValue:null,description:"Image map region definition used for drag/click.\n\nSee also: [google.maps.MarkerShape](https://developers.google.com/maps/documentation/javascript/3.exp/reference#MarkerShape)",name:"shape",required:!1,type:{name:"MarkerShape"}},zIndex:{defaultValue:null,description:"All markers are displayed on the map in order of their zIndex,\nwith higher values displaying in front of markers with lower values.\nBy default, markers are displayed according to their vertical position on screen,\nwith lower markers appearing in front of markers further up the screen.",name:"zIndex",required:!1,type:{name:"number"}},onClick:{defaultValue:null,description:"This handlers is called when the marker icon was clicked.",name:"onClick",required:!1,type:{name:"() => void"}},onDoubleClick:{defaultValue:null,description:"This handlers is called when the marker icon was double clicked.",name:"onDoubleClick",required:!1,type:{name:"() => void"}},onRightClick:{defaultValue:null,description:"This handlers is called when the marker icon was clicked.",name:"onRightClick",required:!1,type:{name:"() => void"}},onMouseDown:{defaultValue:null,description:"This handlers is called for a mouse down on the marker.",name:"onMouseDown",required:!1,type:{name:"() => void"}},onMouseOut:{defaultValue:null,description:"This handlers is called when the mouse leaves the area of the marker icon.",name:"onMouseOut",required:!1,type:{name:"() => void"}},onMouseOver:{defaultValue:null,description:"This handlers is called when the mouse enters the area of the marker icon.",name:"onMouseOver",required:!1,type:{name:"() => void"}},onMouseUp:{defaultValue:null,description:"This handlers is called when for a mouse up on the marker.",name:"onMouseUp",required:!1,type:{name:"() => void"}},onDrag:{defaultValue:null,description:"This handlers is called when the marker icon was clicked.",name:"onDrag",required:!1,type:{name:"() => void"}},onDragStart:{defaultValue:null,description:"This handlers is called when the marker icon was clicked.",name:"onDragStart",required:!1,type:{name:"() => void"}},onDragEnd:{defaultValue:null,description:"This handlers is called when the marker icon was clicked.",name:"onDragEnd",required:!1,type:{name:"() => void"}},onPositionChanged:{defaultValue:null,description:"This handlers is called when the marker `position` property changes.",name:"onPositionChanged",required:!1,type:{name:"() => void"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#Marker"]={docgenInfo:Marker.__docgenInfo,name:"Marker",path:"src/index.ts#Marker"})}catch(h){}try{MarkerIcon.displayName="MarkerIcon",MarkerIcon.__docgenInfo={description:"",displayName:"MarkerIcon",props:{url:{defaultValue:null,description:"The URL of the image or sprite sheet.",name:"url",required:!0,type:{name:"string"}},anchor:{defaultValue:null,description:"The position at which to anchor an image in correspondence to the location of the marker on the map.\n\nBy default, the anchor is located along the center point of the bottom of the image.",name:"anchor",required:!1,type:{name:"PointLiteral"}},labelOrigin:{defaultValue:null,description:"The origin of the label relative to the top-left corner of the icon image, if a label is supplied by the marker.\n\nBy default, the origin is located in the center point of the image.",name:"labelOrigin",required:!1,type:{name:"PointLiteral"}},origin:{defaultValue:null,description:"The position of the image within a sprite, if any.",name:"origin",required:!1,type:{name:"PointLiteral"}},size:{defaultValue:null,description:"The display size of the sprite or image.\n\nWhen using sprites, you must specify the sprite size.\n\nIf the size is not provided, it will be set when the image loads.",name:"size",required:!1,type:{name:"SizeLiteral"}},scaledSize:{defaultValue:null,description:"The size of the entire image after scaling, if any.\n\nUse this property to stretch/shrink an image or a sprite.",name:"scaledSize",required:!1,type:{name:"SizeLiteral"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#MarkerIcon"]={docgenInfo:MarkerIcon.__docgenInfo,name:"MarkerIcon",path:"src/index.ts#MarkerIcon"})}catch(h){}try{MarkerSymbol.displayName="MarkerSymbol",MarkerSymbol.__docgenInfo={description:"",displayName:"MarkerSymbol",props:{path:{defaultValue:null,description:"Built-in symbol path, or a custom path expressed using\n[SVG path notation](http://www.w3.org/TR/SVG/paths.html#PathData).",name:"path",required:!0,type:{name:"string"}},rotation:{defaultValue:null,description:"The angle by which to rotate the symbol, expressed clockwise in degrees.",name:"rotation",required:!1,type:{name:"number"}},scale:{defaultValue:null,description:"The amount by which the symbol is scaled in size.",name:"scale",required:!1,type:{name:"number"}},anchor:{defaultValue:null,description:"The position of the symbol relative to the marker.\nThe coordinates of the symbol's path are translated left and up by the\nanchor's x and y coordinates respectively.",name:"anchor",required:!1,type:{name:"PointLiteral"}},fillColor:{defaultValue:null,description:"The symbol's fill color.\n\nAll CSS3 colors are supported except for extended named colors.",name:"fillColor",required:!1,type:{name:"string"}},fillOpacity:{defaultValue:null,description:"The symbol's fill opacity.",name:"fillOpacity",required:!1,type:{name:"number"}},strokeColor:{defaultValue:null,description:"The symbol's stroke color.\n\nAll CSS3 colors are supported except for extended named colors.",name:"strokeColor",required:!1,type:{name:"string"}},strokeOpacity:{defaultValue:null,description:"The symbol's stroke opacity.",name:"strokeOpacity",required:!1,type:{name:"number"}},strokeWeight:{defaultValue:null,description:"The symbol's stroke weight.",name:"strokeWeight",required:!1,type:{name:"number"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#MarkerSymbol"]={docgenInfo:MarkerSymbol.__docgenInfo,name:"MarkerSymbol",path:"src/index.ts#MarkerSymbol"})}catch(h){}try{Polyline.displayName="Polyline",Polyline.__docgenInfo={description:"",displayName:"Polyline",props:{draggable:{defaultValue:null,description:"If set to true, the user can drag this shape over the map.\n\nThe `geodesic` property defines the mode of dragging.",name:"draggable",required:!1,type:{name:"boolean"}},clickable:{defaultValue:null,description:"Indicates whether this `Polyline` handles mouse events.",name:"clickable",required:!1,type:{name:"boolean"}},geodesic:{defaultValue:null,description:"When `true`, edges of the polygon are interpreted as geodesic and will follow the curvature of the Earth.\nWhen `false`, edges of the polygon are rendered as straight lines in screen space.\n\nNote that the shape of a geodesic polygon may appear to change when dragged,\nas the dimensions are maintained relative to the surface of the earth.",name:"geodesic",required:!1,type:{name:"boolean"}},visible:{defaultValue:null,description:"Whether this `Polyline` is visible on the map.",name:"visible",required:!1,type:{name:"boolean"}},path:{defaultValue:null,description:"The ordered sequence of coordinates of the `Polyline`.",name:"path",required:!0,type:{name:"LatLngLiteral[]"}},strokeColor:{defaultValue:null,description:"The stroke color.\n\nAll CSS3 colors are supported except for extended named colors.",name:"strokeColor",required:!1,type:{name:"string"}},strokeOpacity:{defaultValue:null,description:"The stroke opacity between 0.0 and 1.0.",name:"strokeOpacity",required:!1,type:{name:"number"}},strokeWeight:{defaultValue:null,description:"The stroke width in pixels.",name:"strokeWeight",required:!1,type:{name:"number"}},zIndex:{defaultValue:null,description:"The zIndex compared to other polys.",name:"zIndex",required:!1,type:{name:"number"}},onClick:{defaultValue:null,description:"This handler is fired when the DOM `click` handlers is fired on the `Polyline`.",name:"onClick",required:!1,type:{name:"() => void"}},onDoubleClick:{defaultValue:null,description:"This handler is fired when the DOM `dblclick` handlers is fired on the `Polyline`.",name:"onDoubleClick",required:!1,type:{name:"() => void"}},onRightClick:{defaultValue:null,description:"This handler is fired when the `Polyline` is right-clicked on.",name:"onRightClick",required:!1,type:{name:"() => void"}},onMouseOut:{defaultValue:null,description:"This handler is fired on `mouseout` handlers is fired on `Polyline`.",name:"onMouseOut",required:!1,type:{name:"() => void"}},onMouseOver:{defaultValue:null,description:"This handler is fired on `mouseover` handlers is fired on `Polyline`.",name:"onMouseOver",required:!1,type:{name:"() => void"}},onMouseMove:{defaultValue:null,description:"This handler is fired when the DOM `mousemove` handlers is fired\non `Polyline`.",name:"onMouseMove",required:!1,type:{name:"() => void"}},onMouseDown:{defaultValue:null,description:"This handler is fired when the DOM `mousedown` handlers is fired\non `Polyline`.",name:"onMouseDown",required:!1,type:{name:"() => void"}},onMouseUp:{defaultValue:null,description:"This handler is fired when the DOM `mouseup` handlers is fired\non `Polyline`.",name:"onMouseUp",required:!1,type:{name:"() => void"}},onDrag:{defaultValue:null,description:"This handler is repeatedly fired while the user drags the `Polyline`.",name:"onDrag",required:!1,type:{name:"() => void"}},onDragStart:{defaultValue:null,description:"This handler is fired when the user starts dragging the `Polyline`.",name:"onDragStart",required:!1,type:{name:"() => void"}},onDragEnd:{defaultValue:null,description:"This handler is fired when the user stops dragging the `Polyline`.",name:"onDragEnd",required:!1,type:{name:"(event?: { path: LatLng[]; }) => void"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#Polyline"]={docgenInfo:Polyline.__docgenInfo,name:"Polyline",path:"src/index.ts#Polyline"})}catch(h){}try{FitBounds.displayName="FitBounds",FitBounds.__docgenInfo={description:"",displayName:"FitBounds",props:{bounds:{defaultValue:null,description:"Rectangle from the points at its south-west and north-east corners.",name:"bounds",required:!0,type:{name:"LatLngBoundsLiteral"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#FitBounds"]={docgenInfo:FitBounds.__docgenInfo,name:"FitBounds",path:"src/index.ts#FitBounds"})}catch(h){}try{PanBy.displayName="PanBy",PanBy.__docgenInfo={description:"",displayName:"PanBy",props:{offset:{defaultValue:null,description:"Defines the distance to coordinate from west to east and north to south in pixels.",name:"offset",required:!0,type:{name:"PointLiteral"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#PanBy"]={docgenInfo:PanBy.__docgenInfo,name:"PanBy",path:"src/index.ts#PanBy"})}catch(h){}try{PanTo.displayName="PanTo",PanTo.__docgenInfo={description:"",displayName:"PanTo",props:{position:{defaultValue:null,description:"Defines the next map center position.",name:"position",required:!0,type:{name:"LatLngLiteral"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#PanTo"]={docgenInfo:PanTo.__docgenInfo,name:"PanTo",path:"src/index.ts#PanTo"})}catch(h){}try{PanToBounds.displayName="PanToBounds",PanToBounds.__docgenInfo={description:"",displayName:"PanToBounds",props:{bounds:{defaultValue:null,description:"Rectangle from the points at its south-west and north-east corners.",name:"bounds",required:!0,type:{name:"LatLngBoundsLiteral"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#PanToBounds"]={docgenInfo:PanToBounds.__docgenInfo,name:"PanToBounds",path:"src/index.ts#PanToBounds"})}catch(h){}try{useGoogleMapsLoader.displayName="useGoogleMapsLoader",useGoogleMapsLoader.__docgenInfo={description:"",displayName:"useGoogleMapsLoader",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!0,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri..."}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\nIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\nIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"() => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"() => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!0,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\nthe String resulting from converting this object to a String.\nIf there is no element at that position, the result is undefined.\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nendPosition \u2013 length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\nis "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\nis "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#useGoogleMapsLoader"]={docgenInfo:useGoogleMapsLoader.__docgenInfo,name:"useGoogleMapsLoader",path:"src/index.ts#useGoogleMapsLoader"})}catch(h){}function l(e){return(l="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function d(e,n){return!n||"object"!==l(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,n){return(c=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}t.d(n,"a",function(){return p});var p=function(e){function n(){var e,t;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n);for(var o=arguments.length,r=new Array(o),a=0;a<o;a++)r[a]=arguments[a];return(t=d(this,(e=u(n)).call.apply(e,[this].concat(r)))).state=t.props.initialState,t.updateState=function(e){t.setState(e)},t}var t,o,l;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&c(e,n)}(n,r.a.Component),t=n,(o=[{key:"createApi",value:function(){return{state:this.state,setState:this.updateState}}},{key:"render",value:function(){var e=this,n=this.props,t=n.zoom,o=n.center,l=n.render,s=n.onAnimateClick;return r.a.createElement(a.b,{zoom:t,center:o},l(this.createApi()),r.a.createElement(i.a,{position:"BOTTOM_CENTER"},r.a.createElement("button",{type:"button",style:{padding:10,marginBottom:10},onClick:function(){return s(e.createApi())}},"Animate")))}}])&&s(t.prototype,o),l&&s(t,l),n}()}}]);
//# sourceMappingURL=transitions-docs-fit-bounds~transitions-docs-fit-path~transitions-docs-pan-by~transitions-docs-pan-t~35d47931.1430de2c2abd7a340e6e.js.map