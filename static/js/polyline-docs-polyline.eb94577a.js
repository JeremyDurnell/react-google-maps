(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"./src/internal/useMemoOnce.ts":function(e,n,o){"use strict";o.d(n,"a",function(){return i});var t=o("./node_modules/react/index.js");function i(e){var n=Object(t.useRef)(null);return n.current||(n.current=e()),n.current}try{i.displayName="useMemoOnce",i.__docgenInfo={description:"",displayName:"useMemoOnce",props:{}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/internal/useMemoOnce.ts#useMemoOnce"]={docgenInfo:i.__docgenInfo,name:"useMemoOnce",path:"src/internal/useMemoOnce.ts#useMemoOnce"})}catch(r){}},"./src/polyline/Polyline.ts":function(e,n,o){"use strict";var t,i=o("./node_modules/react/index.js"),r=o("./src/context/GoogleMapsContext.ts"),a=o("./src/internal/MapsUtils.ts"),l=o("./src/internal/useChangedProps.ts"),s=o("./src/internal/useEventHandlers.ts"),A=o("./src/internal/useMemoOnce.ts");function c(e){var n=e.path,o=e.zIndex,c=e.strokeColor,u=e.strokeWeight,d=e.strokeOpacity,g=e.visible,p=void 0===g||g,h=e.geodesic,m=void 0!==h&&h,B=e.clickable,E=void 0===B||B,y=e.draggable,w=void 0!==y&&y,I=e.onClick,O=e.onDoubleClick,f=e.onRightClick,M=e.onMouseOut,D=e.onMouseOver,Y=e.onMouseMove,k=e.onMouseDown,C=e.onMouseUp,F=e.onDrag,Q=e.onDragStart,T=e.onDragEnd,G=Object(r.d)(),b=Object(r.f)(),S={zIndex:o,visible:p,geodesic:m,clickable:E,draggable:w,strokeColor:c,strokeWeight:u,strokeOpacity:d,path:Object(a.c)(b,n,function(e){return Object(a.a)(b,e)})},J=Object(A.a)(function(){return new b.Polyline(S)}),R=Object(l.a)(S),K=Object(i.useRef)(J.getPath());return Object(i.useEffect)(function(){return J.setMap(G),function(){J.setMap(null)}},[]),Object(i.useEffect)(function(){R&&J.setOptions(R)},[R]),Object(s.a)(J,t,{onClick:I,onDoubleClick:O,onRightClick:f,onMouseOut:M,onMouseOver:D,onMouseMove:Y,onMouseDown:k,onMouseUp:C,onDrag:F,onDragStart:function(e){function n(){return e.apply(this,arguments)}return n.toString=function(){return e.toString()},n}(function(){K.current=J.getPath(),Q&&Q()}),onDragEnd:function(e){function n(n){return e.apply(this,arguments)}return n.toString=function(){return e.toString()},n}(function(e){e&&Object.assign(e,{path:J.getPath().getArray()}),J.setPath(K.current),T&&T(e)})}),null}!function(e){e.onClick="click",e.onDoubleClick="dblclick",e.onRightClick="rightclick",e.onMouseOut="mouseout",e.onMouseOver="mouseover",e.onMouseMove="mousemove",e.onMouseDown="mousedown",e.onMouseUp="mouseup",e.onDrag="drag",e.onDragStart="dragstart",e.onDragEnd="dragend"}(t||(t={})),o.d(n,"a",function(){return c});try{c.displayName="Polyline",c.__docgenInfo={description:"",displayName:"Polyline",props:{draggable:{defaultValue:null,description:"If set to true, the user can drag this shape over the map.\n\nThe `geodesic` property defines the mode of dragging.",name:"draggable",required:!1,type:{name:"boolean"}},clickable:{defaultValue:null,description:"Indicates whether this `Polyline` handles mouse events.",name:"clickable",required:!1,type:{name:"boolean"}},geodesic:{defaultValue:null,description:"When `true`, edges of the polygon are interpreted as geodesic and will follow the curvature of the Earth.\nWhen `false`, edges of the polygon are rendered as straight lines in screen space.\n\nNote that the shape of a geodesic polygon may appear to change when dragged,\nas the dimensions are maintained relative to the surface of the earth.",name:"geodesic",required:!1,type:{name:"boolean"}},visible:{defaultValue:null,description:"Whether this `Polyline` is visible on the map.",name:"visible",required:!1,type:{name:"boolean"}},path:{defaultValue:null,description:"The ordered sequence of coordinates of the `Polyline`.",name:"path",required:!0,type:{name:"LatLngLiteral[]"}},strokeColor:{defaultValue:null,description:"The stroke color.\n\nAll CSS3 colors are supported except for extended named colors.",name:"strokeColor",required:!1,type:{name:"string"}},strokeOpacity:{defaultValue:null,description:"The stroke opacity between 0.0 and 1.0.",name:"strokeOpacity",required:!1,type:{name:"number"}},strokeWeight:{defaultValue:null,description:"The stroke width in pixels.",name:"strokeWeight",required:!1,type:{name:"number"}},zIndex:{defaultValue:null,description:"The zIndex compared to other polys.",name:"zIndex",required:!1,type:{name:"number"}},onClick:{defaultValue:null,description:"This handler is fired when the DOM `click` handlers is fired on the `Polyline`.",name:"onClick",required:!1,type:{name:"() => void"}},onDoubleClick:{defaultValue:null,description:"This handler is fired when the DOM `dblclick` handlers is fired on the `Polyline`.",name:"onDoubleClick",required:!1,type:{name:"() => void"}},onRightClick:{defaultValue:null,description:"This handler is fired when the `Polyline` is right-clicked on.",name:"onRightClick",required:!1,type:{name:"() => void"}},onMouseOut:{defaultValue:null,description:"This handler is fired on `mouseout` handlers is fired on `Polyline`.",name:"onMouseOut",required:!1,type:{name:"() => void"}},onMouseOver:{defaultValue:null,description:"This handler is fired on `mouseover` handlers is fired on `Polyline`.",name:"onMouseOver",required:!1,type:{name:"() => void"}},onMouseMove:{defaultValue:null,description:"This handler is fired when the DOM `mousemove` handlers is fired\non `Polyline`.",name:"onMouseMove",required:!1,type:{name:"() => void"}},onMouseDown:{defaultValue:null,description:"This handler is fired when the DOM `mousedown` handlers is fired\non `Polyline`.",name:"onMouseDown",required:!1,type:{name:"() => void"}},onMouseUp:{defaultValue:null,description:"This handler is fired when the DOM `mouseup` handlers is fired\non `Polyline`.",name:"onMouseUp",required:!1,type:{name:"() => void"}},onDrag:{defaultValue:null,description:"This handler is repeatedly fired while the user drags the `Polyline`.",name:"onDrag",required:!1,type:{name:"() => void"}},onDragStart:{defaultValue:null,description:"This handler is fired when the user starts dragging the `Polyline`.",name:"onDragStart",required:!1,type:{name:"() => void"}},onDragEnd:{defaultValue:null,description:"This handler is fired when the user stops dragging the `Polyline`.",name:"onDragEnd",required:!1,type:{name:"(event?: { path: LatLng[]; }) => void"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/polyline/Polyline.ts#Polyline"]={docgenInfo:c.__docgenInfo,name:"Polyline",path:"src/polyline/Polyline.ts#Polyline"})}catch(u){}},"./src/polyline/__docs__/Polyline.mdx":function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return h});var t=o("./node_modules/react/index.js"),i=o.n(t),r=o("./node_modules/@mdx-js/tag/dist/index.js"),a=o("./node_modules/docz/dist/index.m.js"),l=o("./src/polyline/Polyline.ts"),s=o("./src/__docs__/DocsComponents.tsx");function A(e){return(A="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,n){if(null==e)return{};var o,t,i=function(e,n){if(null==e)return{};var o,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)o=r[t],n.indexOf(o)>=0||(i[o]=e[o]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)o=r[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}function u(e,n){for(var o=0;o<n.length;o++){var t=n[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function d(e,n){return!n||"object"!==A(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,n){return(p=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var h=function(e){function n(e){var o;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(o=d(this,g(n).call(this,e))).layout=null,o}var o,t,A;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&p(e,n)}(n,i.a.Component),o=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components,o=c(e,["components"]);return i.a.createElement(r.MDXTag,{name:"wrapper",components:n},i.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"polyline"}},"Polyline"),i.a.createElement(r.MDXTag,{name:"p",components:n},"Draws ",i.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"google.maps.Polyline"),"."),i.a.createElement(r.MDXTag,{name:"p",components:n},i.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"p"},"Google Maps Docs:")),i.a.createElement(r.MDXTag,{name:"ul",components:n},i.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://developers.google.com/maps/documentation/javascript/reference#Polyline"}},"google.maps.Polyline")),i.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://developers.google.com/maps/documentation/javascript/reference#PolylineOptions"}},"google.maps.PolylineOptions"))),i.a.createElement(a.e,{__codesandbox:"",__position:0,__code:"<DocsMap zoom={8} center={{ lat: 37.33821, lng: -121.88633 }}>\n  <Polyline\n    visible={true}\n    clickable={true}\n    draggable={false}\n    strokeColor=\"#FF0000\"\n    strokeWidth={1}\n    strokeOpacity={1}\n    path={[\n      { lat: 37.33821, lng: -121.88633 },\n      { lat: 37.00578, lng: -121.56826 },\n    ]}\n    onDragEnd={e => {\n      alert(\n        \"It's position will reset, path new 'path' to set it's new position. Position changed to: \" +\n          JSON.stringify(e.path),\n      )\n    }}\n  />\n</DocsMap>",__scope:{props:this?this.props:o,Polyline:l.a,DocsMap:s.b}},i.a.createElement(s.b,{zoom:8,center:{lat:37.33821,lng:-121.88633}},i.a.createElement(l.a,{visible:!0,clickable:!0,draggable:!1,strokeColor:"#FF0000",strokeWidth:1,strokeOpacity:1,path:[{lat:37.33821,lng:-121.88633},{lat:37.00578,lng:-121.56826}],onDragEnd:function(e){alert("It's position will reset, path new 'path' to set it's new position. Position changed to: "+JSON.stringify(e.path))}}))),i.a.createElement(a.f,{of:l.a}))}}])&&u(o.prototype,t),A&&u(o,A),n}()}}]);
//# sourceMappingURL=polyline-docs-polyline.1430de2c2abd7a340e6e.js.map