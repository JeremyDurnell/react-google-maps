{"version":3,"sources":["webpack:///./src/controls/MapTypeControl.ts","webpack:///./src/controls/__docs__/MapTypeControl.mdx","webpack:///./src/controls/internal/useMapControl.ts"],"names":["__webpack_require__","d","__webpack_exports__","MapTypeControl","_internal_useMapControl__WEBPACK_IMPORTED_MODULE_0__","_ref","_ref$position","position","_ref$style","style","_ref$mapTypeIds","mapTypeIds","useMapControl","maps","name","options","MapTypeControlStyle","ControlPosition","map","x","MapTypeId","displayName","__docgenInfo","description","props","defaultValue","required","type","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","MDXContent","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","id","parentName","href","docz__WEBPACK_IMPORTED_MODULE_2__","__codesandbox","__position","__code","__scope","DocsMap","_docs_DocsComponents__WEBPACK_IMPORTED_MODULE_3__","_MapTypeControl__WEBPACK_IMPORTED_MODULE_4__","of","factory","useGoogleMap","_factory","useGoogleMapsAPI","controlOptions","useDeepCompareMemo","useEffect","_map$setOptions","setOptions","_defineProperty","concat","_map$setOptions2","undefined"],"mappings":"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","file":"static/js/controls-docs-map-type-control.af9fd615.js","sourcesContent":["import { useMapControl } from \"./internal/useMapControl\";\n\nexport interface MapTypeControlProps {\n  /**\n   * Position id. Used to specify the position of the control on the map.\n   */\n  position?: keyof typeof google.maps.ControlPosition;\n\n  /**\n   * Style id. Used to select what style of map type control to display.\n   */\n  style?: \"DEFAULT\" | \"DROPDOWN_MENU\" | \"HORIZONTAL_BAR\";\n\n  /**\n   * IDs of map types to show in the control.\n   */\n  mapTypeIds?: Array<keyof typeof google.maps.MapTypeId>;\n}\n\nexport function MapTypeControl({\n  position = \"TOP_RIGHT\",\n  style = \"DEFAULT\",\n  mapTypeIds = [\"HYBRID\", \"ROADMAP\", \"SATELLITE\", \"TERRAIN\"],\n}: MapTypeControlProps): null {\n  useMapControl(maps => ({\n    name: \"mapTypeControl\",\n    options: {\n      style: maps.MapTypeControlStyle[style],\n      position: maps.ControlPosition[position],\n      mapTypeIds: mapTypeIds.map(x => x && maps.MapTypeId[x]),\n    },\n  }));\n\n  return null;\n}\ntry {\n    // @ts-ignore\n    MapTypeControl.displayName = \"MapTypeControl\";\n    // @ts-ignore\n    MapTypeControl.__docgenInfo = { \"description\": \"\", \"displayName\": \"MapTypeControl\", \"props\": { \"position\": { \"defaultValue\": null, \"description\": \"Position id. Used to specify the position of the control on the map.\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"\\\"BOTTOM_CENTER\\\" | \\\"BOTTOM_LEFT\\\" | \\\"BOTTOM_RIGHT\\\" | \\\"LEFT_BOTTOM\\\" | \\\"LEFT_CENTER\\\" | \\\"LEFT_TOP\\\" | \\\"RIGHT_BOTTOM\\\" | \\\"RIGHT_CENTER\\\" | \\\"RIGHT_TOP\\\" | \\\"TOP_CENTER\\\" | \\\"TOP_LEFT\\\" | \\\"TOP_RIGHT\\\"\" } }, \"style\": { \"defaultValue\": null, \"description\": \"Style id. Used to select what style of map type control to display.\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"\\\"DEFAULT\\\" | \\\"DROPDOWN_MENU\\\" | \\\"HORIZONTAL_BAR\\\"\" } }, \"mapTypeIds\": { \"defaultValue\": null, \"description\": \"IDs of map types to show in the control.\", \"name\": \"mapTypeIds\", \"required\": false, \"type\": { \"name\": \"(\\\"HYBRID\\\" | \\\"ROADMAP\\\" | \\\"SATELLITE\\\" | \\\"TERRAIN\\\")[]\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/controls/MapTypeControl.ts#MapTypeControl\"] = { docgenInfo: MapTypeControl.__docgenInfo, name: \"MapTypeControl\", path: \"src/controls/MapTypeControl.ts#MapTypeControl\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from \"docz\";\nimport { DocsMap } from \"../../__docs__/DocsComponents\";\nimport { MapTypeControl } from \"../MapTypeControl\";\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"zoom-control\"}}>{`Zoom Control`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Controls display options of zoom control.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Google Maps Docs:`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://developers.google.com/maps/documentation/javascript/reference#MapTypeId\"}}>{`google.maps.MapTypeId`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://developers.google.com/maps/documentation/javascript/reference#ControlPosition\"}}>{`google.maps.ControlPosition`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://developers.google.com/maps/documentation/javascript/reference#MapTypeControlStyle\"}}>{`google.maps.MapTypeControlStyle`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://developers.google.com/maps/documentation/javascript/reference#MapTypeControlOptions\"}}>{`google.maps.MapTypeControlOptions`}</MDXTag></MDXTag>\n</MDXTag>\n<Playground __codesandbox={``} __position={0} __code={'<DocsMap>\\n  <MapTypeControl\\n    style=\\\"DEFAULT\\\"\\n    position=\\\"TOP_CENTER\\\"\\n    mapTypeIds={[\\'HYBRID\\', \\'ROADMAP\\', \\'SATELLITE\\', \\'TERRAIN\\']}\\n  />\\n</DocsMap>'} __scope={{props: this ? this.props : props,DocsMap,MapTypeControl}}>\n  <DocsMap>\n    <MapTypeControl\n      style=\"DEFAULT\"\n      position=\"TOP_CENTER\"\n      mapTypeIds={[\"HYBRID\", \"ROADMAP\", \"SATELLITE\", \"TERRAIN\"]}\n    />\n  </DocsMap>\n</Playground>\n<PropsTable of={MapTypeControl} />\n           </MDXTag>\n  }\n}\n  ","import { useEffect } from \"react\";\n\nimport {\n  useGoogleMap,\n  useGoogleMapsAPI,\n} from \"../../context/GoogleMapsContext\";\nimport { useDeepCompareMemo } from \"../../internal/useDeepCompareMemo\";\n\ninterface Control<\n  TName extends keyof google.maps.MapOptions,\n  TOptions = never\n> {\n  name: TName;\n  options?: TOptions;\n}\n\ntype MapControlVariant =\n  | Control<\"fullscreenControl\", google.maps.FullscreenControlOptions>\n  | Control<\"mapTypeControl\", google.maps.MapTypeControlOptions>\n  | Control<\"rotateControl\", google.maps.RotateControlOptions>\n  | Control<\"scaleControl\">\n  | Control<\"streetViewControl\", google.maps.StreetViewControlOptions>\n  | Control<\"zoomControl\", google.maps.ZoomControlOptions>;\n\nexport function useMapControl(\n  factory: (maps: typeof google.maps) => MapControlVariant,\n): void {\n  const map = useGoogleMap();\n  const maps = useGoogleMapsAPI();\n  const { name, options } = factory(maps);\n  const controlOptions = useDeepCompareMemo(() => options || {}, [options]);\n\n  useEffect(() => {\n    map.setOptions({ [name]: true, [`${name}Options`]: controlOptions });\n\n    return () => {\n      map.setOptions({ [name]: false, [`${name}Options`]: undefined });\n    };\n  }, [name, controlOptions]);\n}\ntry {\n    // @ts-ignore\n    useMapControl.displayName = \"useMapControl\";\n    // @ts-ignore\n    useMapControl.__docgenInfo = { \"description\": \"\", \"displayName\": \"useMapControl\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/controls/internal/useMapControl.ts#useMapControl\"] = { docgenInfo: useMapControl.__docgenInfo, name: \"useMapControl\", path: \"src/controls/internal/useMapControl.ts#useMapControl\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}